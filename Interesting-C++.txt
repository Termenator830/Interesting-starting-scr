"Roses are red, violets are blue, i keep trying to learn more" 

C++ - compiling programming language(differce for each OS, low-level language, statistically typed(each entity has it's type), multiparadigm, compiled(do only what was assigned, can catch errors))
C++ language standart has around 1340 pages 
Creator of C++ is Бьёрн Страуструп (Bell Labs company) 
first compilator - cfront
first name - "C with classes"

Compilator transfers C++ code to a machine code to execute. Compiling is not very reversible 
App architect --> programming --> compilation --> execution --> translation 

•Division of a program by files(structure, coop compilation, easier recompilation) 
2 types:
1)file with source code(extension .cpp, .c++, .cc, .cxx, .cp, etc)
2)header files(.hpp, .h)

•Definitions:
<< <=> Send this value into the output stream.
flush <=> “Сбрасывает буфер” или “принудительно выводит данные из памяти (RAM) в экран или файл”
chart <=> table, graph, сводка 
; <=> 'I finished right there, move on' 

#include <iostream> -- get from standart lib(in/out). use "..." to get from your file 

using namespace std; -- standart ns, also can use 'using std::cout'.
int main() {something} -- start program, send return code as int(to system)
{
  cout << "Hello World!" << endl; -- cout <=> output terminal, endl <=> \n and flush
  cout << "Hello World!" << flush; -- flush without \n
  cout << "Hello World!\n"; -- \n without flush
  return 0;
}

&Example
#include <iostream>
#include <string>
#include <cmath>

using namespace std;

int main() 
{
string characterName = "John";
int characterAge = 70;
int childNum;
char grade = 'A' -- char object uses 1 byte 
childNum = 40; -- delay assidning a variable
float price = 70.5;
double nums = 7;
bool isMale = true;
cout << "There once was a man named " << characterName.length() << "\n"; -- variable separated 
cout << "He was " << characterAge << " years old" << endl;
characterName = "Tom"
cout << "He likes the name " << characterName << "\n" << flush;
return 0;
}

* phrase.length() -- return length of a string
* phrase[0] = B -- index position, replaces p with B
* phrase.find("Academy", 0) -- returns inde(if word - of it's first letter), which ind to start from 
* phrase.substr(8, 7) -- (starting ind, amount of chars), if no amount mentioned - till the end 
* typeid(phrase).name() -- returns type 
* wnum += 5 -- just like in python
* sqrt(36), pow(2, 5) -- math funcs are available with cmath
* double result = round(x * 100.0) / 100.0 -- round with num of decimals, otherwise to int 
* fmax(10, 11) -- return max val from 2 vals 

&Get user's input 

int main()
{
int age;
cout << "Enter your age: " << endl;
* cin >> age; -- put input data into a variable, if doesn't meet data type at all - stores 1st char 

cout << "You are " << age << " years old";
getline(cin, line) -- store input data into line var (spaces, nums, etc) 
cout << line;
return 0;
}

&Example
int main()
{
double num1, num2;
cout << "Enetr first number: ";
cin >> num1;
cout << "Enter second number: ";
cin >> num2;

cout << num1 + num2;


return 0;
}

•Array - can store multiple vals, same data type, static

#include <iostream>
using namespace std;

int main()
{
* int luckyNums[20] = {4, 8, 15, 16, 23}; -- make an array of size 20 and set some vals 
int Nums[] = {2, 3, 4}; -- size is always 3 from now 
int luckNums[20]; -- can make and assign vals later(0-vals array) 
luckNums[8] = 19
  
luckyNums[10] = 100;
cout << luckyNums[10];
return 0;
}

•functions
&Do something without returning val
#include <iostream>
using namespace std;

* void sayHi(string name, int age) -- do without returning anything. 
{
cout << "Hello " << name << " you are " << age;
}

int main()
{
sayHi("Mike");
return 0;
}

&Can also assign a function before, but setup it after main
void sayHi(string name, int age);
void sayHi(string name, int age) { 
cout << "Hello " << name << " you are " << age;
}

&Do something with args
#include <iostream>
using namespace std;

* int add(int a, int b) {
    return a + b;
}

int main() {
    int result = add(3, 7);  -- store the returned value
    cout << "The sum is: " << result << endl;

    return 0;
}


•if statements
#include <iostream>
using namespace std;

int main() {
  bool isMale = false;
  bool isTall = true;
  * if(isMale && !isTall) {          ! <=> not, && for bit ops(1.5 times faster, but unstable) 
    cout << "You are a short male";
  } else {                          -- can also do else if (...) {...}
    cout << "You are not male";
  }
  return 0;
}


&Comparisons
#include <iostream>
using namespace std;

int getMax(int num1, int num2) {
  int result;
  
  if(num1 >= num2) {result = num1;} else {result = num2;}
  
  return result;
}

int main() {

  cout << getMax(5, 10);
  return 0;
}





