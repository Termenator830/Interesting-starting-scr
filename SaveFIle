#Calculator 

a = float(input())
b = float(input())
act = input()

if (act=="/" or act=="mod" or act=="div") and b==0:
    c = "Деление на 0!"
elif act=="+":    c = a + b
elif act=="-":    c = a - b
elif act=="/":    c = a / b
elif act=="*":    c = a * b
elif act=="mod":  c = a % b
elif act=="pow":  c = a ** b
elif act=="div":  c = a // b

print (c) 

#Labeling 

n = int(input()) 

if n % 10 in [1] and not ( n % 100 == 11 ) : 
  print(n, "программист")

elif n % 10 in [2, 3, 4] and not ( 12 <= n % 100 <= 14 ) :
  print(n, "программиста") 

else : 
  print(n, "программистов") 


#Lucky Ticket 

n = int(input()) 

a = n // 100000 % 10 
b = n // 10000 % 10 
c = n // 1000 % 10 
d = n // 100 % 10 
e = n // 10 % 10 
f = n % 10 

if a + b + c == d + e + f: 
    print('Счастливый')
elif a + b + c != d + e + f : 
    print('Обычный')

#Sum 

a = int(input()) 
s = a
while not a == 0 :
  a = int(input()) 
  s += a 
print(s)

#НОД 

a = int(input())
b = int(input())

d = 2  # начинаем с первого возможного делителя > 1

while d <= a and d <= b:
    if a % d == 0 and b % d == 0:
        print("Наименьший общий делитель:", d)
        break
    d += 1
else:
  print("Нет общих делителей кроме 1") 

#Таблица умножения 
a = int(input())
b = int(input())

for i in range(a, b + 1):
  print('', i, end="\n\n") 

for j in range(c, d+1): 
  print('\t', j, end='\t') 
print()

#i for range 

a, b = (int(i) for i in input().split())
s = 0
n = 0
for i in range(a, b + 1):
  if i % 3 == 0:
    s += i
    n += 1
s = s / n
print(s)

#indexing 

genome = 'ATGG'

genome[0] = 'A'
genome[-4] = 'A'

=> genome = 'ATGG'
for i in range(4):
  print(genome[i]) 

or

genome = 'ATGG'
for i in genome:
  print(i)

genome = 'ATSGD'
print(genome.count('C')) 

if 'TG' in s: 
s.upper().count('gt'.upper())

#Slicing

dna = 'ATTCGGAGCT'
dna[1:4:2] 
dna[::-1] = TCGAGGCTTA

genom = input()
n = len(genom)

#Save Memory
genom = input()
n = len(genom)

i = 0
while i < n:
    s = 1
    while i + 1 < n and genom[i] == genom[i + 1]:
        s += 1
        i += 1
    print(genom[i] + str(count))
    i += 1

print('end') 

#Lists 

students = ['Ivan', 'Masha', 'Sasha']
print(students[1:3]) 
List1 + List2 = List1, List2
List * 2 = List, List
* List elements are CHANGABLE 
* List.append['Olga'] - add 1 item to the box
* List += ['Boris'] - expand by range 
* List.insert(1, 'Olga') - add on place 

* del students[1:3]
* students.remove('Sasha') 

* if ... (not) in List
* ind = students.index('Sasha')

* ordered_students = sorted(students)
* students.sort

* min(students) 
* max(students) 

* students.reserse() - change List's state
* reversed(students) <=> students[::-1] - use as reversed 

                    ГЕНЕРАЦИЯ СПИСКОВ 

a = [0]*5 
a = [0 for i in range(5)]
a = [i*i for i in range(5)]
a = [int(i) for i in input().split()] 

#Сумма
a = [int(i) for i in input().split()] 
s = 0

for i in a:
    s += i
print(s)

#Alg

a = [int(i) for i in input().split()]
n = len(a)

for i in range(n):
    if i == 0:
        print(a[1] + a[-1], end=' ')
    elif i == n - 1:
        print(a[-2] + a[0], end=' ')
    else:
        print(a[i - 1] + a[i + 1], end=' ')

#Return same values

a = [int(i) for i in input().split()]
a.sort()
n = len(a)

i = 0
while i < n - 1:
    if a[i] == a[i + 1]:
        print(a[i], end=' ')
        while i < n - 1 and a[i] == a[i + 1]:
            i += 1
    i += 1 

    ДВУМЕРНЫЕ СПИСКИ 

a = [[1,2,3],[4,5,6],[7,8,9]] - matrix 3x3
a[1][1] - stroke number, field number 
a = [[0]*n]*n
a[0][0] = 5 - changes all lists as in original stroke

Generators: 
a = [[0] * n for i in range(n)]
a = [[0 for j in range(n)] for i in range(n)]

#Count Matrix 
n = 3
count = 1
a = [[0 for j in range(n)] for i in range(n)]

for i in range(n):
    for j in range(n):
        a[i][j] = count
        count += 1

#Edit Matrix

b = [int(y) for y in input().split()]

for i in range(n):
    for j in range(m):
        if i == b[0] and j == b[1]:
            a[b[0] - 1][b[1] - 1] = -1
        else: a[i][j] = 0

for i in range(n):
    for j in range(m):
        print(a[i][j], end='\t')
    print() 

#Mine FIeld

n, m, k = (int(i) for i in input().split())
a = [[0 for i in range(m)] for j in range(n)]
for i in range(k):
    row, col = [int(i) - 1 for i in input().split()]
    a[row][col] = -1
for i in range(n):
    for j in range(m):
        if a[i][j] == 0:
            for di in range(-1, 2):
                for dj in range(-1, 2):
                    ai = i + di
                    aj = j + dj
                    if 0 <= ai < n and 0 <= aj < m and a[ai][aj] == -1:
                        a[i][j] += 1
for i in range(n):
    for j in range(m):
        if a[i][j] == -1:
            print('*', end='')
        elif a[i][j] == 0:
            print('.', end='') 
        else:
            print(a[i][j], end='')
    print()

#Run first loop with no req 

s = 0
d = 0
first_cycle = True

while d != 0 or first_cycle:
    first_cycle = False
    try:
        k = int(input())
    except EOFError:
        break
    s += k ** 2
    d += k
print(s)

#Lists setting

a = int(input())
res = []
n = 1

while len(res) < a:
    for i in range(n):
        if len(res) >= a:
            break
        res.append(n)
    n += 1

print(*res)

#Remake matrix

a = []
k = 0

while True:
    s = input()
    if s == 'end':
        break
    b = [int(i) for i in s.split()]
    a.append(b)
    k += 1

n = len(a)

for i in range(k):  # fix here — no need for k+1
    for j in a[i]:
        print(j, end=' ')
    print()
